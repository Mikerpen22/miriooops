<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Infra on Miriooops</title>
    <link>http://localhost:1313/series/infra/</link>
    <description>Recent content in Infra on Miriooops</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 20 May 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/series/infra/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Service mesh &amp; lstio</title>
      <link>http://localhost:1313/posts/2022/05/service-mesh-lstio/</link>
      <pubDate>Fri, 20 May 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2022/05/service-mesh-lstio/</guid>
      <description>&lt;h3 id=&#34;whats-service-mesh&#34;&gt;What&amp;rsquo;s service mesh&lt;/h3&gt;&#xA;&lt;p&gt;A service mesh, like the open source project &lt;a href=&#34;https://www.redhat.com/en/topics/microservices/what-is-istio&#34;&gt;Istio,&lt;/a&gt; &lt;em&gt;is a way to control how different parts of an application share data with one another&lt;/em&gt;. Unlike other systems for managing this communication, a service mesh is a dedicated infrastructure layer built right into an app&lt;/p&gt;&#xA;&lt;h3 id=&#34;how-it-works&#34;&gt;How it works&lt;/h3&gt;&#xA;&lt;p&gt;A &lt;strong&gt;service mesh doesn’t introduce new functionality to an app’s runtime environment&lt;/strong&gt; — apps in any architecture have always needed rules to specify how requests get from point A to point B. What’s different about a service mesh is that it takes the logic governing service-to-service communication out of individual services and abstracts it to a layer of infrastructure.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
