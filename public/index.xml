<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Miriooops</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Miriooops</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 20 May 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Service mesh &amp; lstio</title>
      <link>http://localhost:1313/posts/2022/05/service-mesh-lstio/</link>
      <pubDate>Fri, 20 May 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2022/05/service-mesh-lstio/</guid>
      <description>&lt;h3 id=&#34;whats-service-mesh&#34;&gt;What&amp;rsquo;s service mesh&lt;/h3&gt;&#xA;&lt;p&gt;A service mesh, like the open source project &lt;a href=&#34;https://www.redhat.com/en/topics/microservices/what-is-istio&#34;&gt;Istio,&lt;/a&gt; &lt;em&gt;is a way to control how different parts of an application share data with one another&lt;/em&gt;. Unlike other systems for managing this communication, a service mesh is a dedicated infrastructure layer built right into an app&lt;/p&gt;&#xA;&lt;h3 id=&#34;how-it-works&#34;&gt;How it works&lt;/h3&gt;&#xA;&lt;p&gt;A &lt;strong&gt;service mesh doesn’t introduce new functionality to an app’s runtime environment&lt;/strong&gt; — apps in any architecture have always needed rules to specify how requests get from point A to point B. What’s different about a service mesh is that it takes the logic governing service-to-service communication out of individual services and abstracts it to a layer of infrastructure.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting GOPATH</title>
      <link>http://localhost:1313/posts/2021/03/setting-gopath/</link>
      <pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2021/03/setting-gopath/</guid>
      <description>&lt;h3 id=&#34;the-gopath-and-path-environment-variables&#34;&gt;The GOPATH and PATH environment variables&lt;/h3&gt;&#xA;&lt;p&gt;The &lt;code&gt;GOPATH&lt;/code&gt; environment variable specifies the location of your workspace. It defaults to a directory named &lt;code&gt;go&lt;/code&gt; inside your home directory (&lt;code&gt;$HOME/go&lt;/code&gt;).&lt;/p&gt;&#xA;&lt;p&gt;If you really want to change your GOPATH to something else add GOPATH to your shell/bash/zsh initialization file &lt;code&gt;.bash_profile&lt;/code&gt;, &lt;code&gt;.bashrc&lt;/code&gt; or &lt;code&gt;.zshrc&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;export GOPATH=/something-else&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Add &lt;code&gt;GOPATH/bin&lt;/code&gt; directory to your &lt;code&gt;PATH&lt;/code&gt; environment variable so you can run Go programs anywhere.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;export PATH=$PATH:$(go env GOPATH)/bin&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Make sure to re-source &lt;code&gt;source .bash_profile&lt;/code&gt; your current session or simply open new tab within iTerm.&lt;/p&gt;</description>
    </item>
    <item>
      <title>About</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Tue, 29 Jun 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/about/</guid>
      <description>&lt;script type=&#34;text/javascript&#34; src=&#39;http://localhost:1313/js/pdf-js/build/pdf.js&#39;&gt;&lt;/script&gt;&#xA;&lt;style&gt;&#xA;  #the-canvas {&#xA;    border: 1px solid black;&#xA;    direction: ltr;&#xA;    width: 100%;&#xA;    height: auto;&#xA;    display: none;&#xA;  }&#xA;&#xA;  #paginator {&#xA;    display: none;&#xA;    text-align: center;&#xA;    margin-bottom: 10px;&#xA;  }&#xA;&#xA;  #loadingWrapper {&#xA;    display: none;&#xA;    justify-content: center;&#xA;    align-items: center;&#xA;    width: 100%;&#xA;    height: 350px;&#xA;  }&#xA;&#xA;  #loading {&#xA;    display: inline-block;&#xA;    width: 50px;&#xA;    height: 50px;&#xA;    border: 3px solid #d2d0d0;&#xA;    ;&#xA;    border-radius: 50%;&#xA;    border-top-color: #383838;&#xA;    animation: spin 1s ease-in-out infinite;&#xA;    -webkit-animation: spin 1s ease-in-out infinite;&#xA;  }&#xA;&#xA;  @keyframes spin {&#xA;    to {&#xA;      -webkit-transform: rotate(360deg);&#xA;    }&#xA;  }&#xA;&#xA;  @-webkit-keyframes spin {&#xA;    to {&#xA;      -webkit-transform: rotate(360deg);&#xA;    }&#xA;  }&#xA;&lt;/style&gt;&#xA;&#xA;&lt;div id=&#34;paginator&#34;&gt;&#xA;  &lt;button id=&#34;prev&#34;&gt;Previous&lt;/button&gt;&#xA;  &lt;button id=&#34;next&#34;&gt;Next&lt;/button&gt;&#xA;  &amp;nbsp; &amp;nbsp;&#xA;  &lt;span&gt;Page: &lt;span id=&#34;page_num&#34;&gt;&lt;/span&gt; / &lt;span id=&#34;page_count&#34;&gt;&lt;/span&gt;&lt;/span&gt;&#xA;&lt;/div&gt;&#xA;&lt;div id=&#34;embed-pdf-container&#34;&gt;&#xA;  &lt;div id=&#34;loadingWrapper&#34;&gt;&#xA;    &lt;div id=&#34;loading&#34;&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;canvas id=&#34;the-canvas&#34;&gt;&lt;/canvas&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;script type=&#34;text/javascript&#34;&gt;&#xA;  window.onload = function () {&#xA;    &#xA;    &#xA;    var url = &#34;http:\/\/localhost:1313\/&#34; + &#39;Newgrad_Resume_ver2.pdf&#39;;&#xA;&#xA;    var hidePaginator = &#34;true&#34; === &#34;true&#34;;&#xA;    var hideLoader = &#34;&#34; === &#34;true&#34;;&#xA;    var selectedPageNum = parseInt(&#34;&#34;) || 1;&#xA;&#xA;    &#xA;    var pdfjsLib = window[&#39;pdfjs-dist/build/pdf&#39;];&#xA;&#xA;    &#xA;    pdfjsLib.GlobalWorkerOptions.workerSrc = &#34;http:\/\/localhost:1313\/&#34; + &#39;/js/pdf-js/build/pdf.worker.js&#39;;&#xA;&#xA;    &#xA;    var pdfDoc = null,&#xA;      pageNum = selectedPageNum,&#xA;      pageRendering = false,&#xA;      pageNumPending = null,&#xA;      scale = 3,&#xA;      canvas = document.getElementById(&#39;the-canvas&#39;),&#xA;      ctx = canvas.getContext(&#39;2d&#39;),&#xA;      paginator = document.getElementById(&#34;paginator&#34;),&#xA;      loadingWrapper = document.getElementById(&#39;loadingWrapper&#39;);&#xA;&#xA;&#xA;    &#xA;    showPaginator();&#xA;    showLoader();&#xA;&#xA;    &#xA;&#xA;    function renderPage(num) {&#xA;      pageRendering = true;&#xA;      &#xA;      pdfDoc.getPage(num).then(function (page) {&#xA;        var viewport = page.getViewport({ scale: scale });&#xA;        canvas.height = viewport.height;&#xA;        canvas.width = viewport.width;&#xA;&#xA;        &#xA;        var renderContext = {&#xA;          canvasContext: ctx,&#xA;          viewport: viewport&#xA;        };&#xA;        var renderTask = page.render(renderContext);&#xA;&#xA;        &#xA;        renderTask.promise.then(function () {&#xA;          pageRendering = false;&#xA;          showContent();&#xA;&#xA;          if (pageNumPending !== null) {&#xA;            &#xA;            renderPage(pageNumPending);&#xA;            pageNumPending = null;&#xA;          }&#xA;        });&#xA;      });&#xA;&#xA;      &#xA;      document.getElementById(&#39;page_num&#39;).textContent = num;&#xA;    }&#xA;&#xA;    &#xA;&#xA;    function showContent() {&#xA;      loadingWrapper.style.display = &#39;none&#39;;&#xA;      canvas.style.display = &#39;block&#39;;&#xA;    }&#xA;&#xA;    &#xA;&#xA;    function showLoader() {&#xA;      if (hideLoader) return&#xA;      loadingWrapper.style.display = &#39;flex&#39;;&#xA;      canvas.style.display = &#39;none&#39;;&#xA;    }&#xA;&#xA;    &#xA;&#xA;    function showPaginator() {&#xA;      if (hidePaginator) return&#xA;      paginator.style.display = &#39;block&#39;;&#xA;    }&#xA;&#xA;    &#xA;&#xA;    function queueRenderPage(num) {&#xA;      if (pageRendering) {&#xA;        pageNumPending = num;&#xA;      } else {&#xA;        renderPage(num);&#xA;      }&#xA;    }&#xA;&#xA;    &#xA;&#xA;    function onPrevPage() {&#xA;      if (pageNum &lt;= 1) {&#xA;        return;&#xA;      }&#xA;      pageNum--;&#xA;      queueRenderPage(pageNum);&#xA;    }&#xA;    document.getElementById(&#39;prev&#39;).addEventListener(&#39;click&#39;, onPrevPage);&#xA;&#xA;    &#xA;&#xA;    function onNextPage() {&#xA;      if (pageNum &gt;= pdfDoc.numPages) {&#xA;        return;&#xA;      }&#xA;      pageNum++;&#xA;      queueRenderPage(pageNum);&#xA;    }&#xA;    document.getElementById(&#39;next&#39;).addEventListener(&#39;click&#39;, onNextPage);&#xA;&#xA;    &#xA;&#xA;    pdfjsLib.getDocument(url).promise.then(function (pdfDoc_) {&#xA;      pdfDoc = pdfDoc_;&#xA;      var numPages = pdfDoc.numPages;&#xA;      document.getElementById(&#39;page_count&#39;).textContent = numPages;&#xA;&#xA;      &#xA;      if (pageNum &gt; numPages) {&#xA;        pageNum = numPages&#xA;      }&#xA;&#xA;      &#xA;      renderPage(pageNum);&#xA;    });&#xA;  }&#xA;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;I&amp;rsquo;m a physicist turned rogue into a programmer. Interested in machine learning, statistics, backend, and details behind how programs work. I mostly write about simple but slightly technical stuff for myself.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
